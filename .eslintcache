[{"/Users/mivd/Documents/Code/playground/3d-solar-sys/src/reportWebVitals.js":"1","/Users/mivd/Documents/Code/playground/3d-solar-sys/src/App.js":"2","/Users/mivd/Documents/Code/playground/3d-solar-sys/src/components/Stars.js":"3","/Users/mivd/Documents/Code/playground/3d-solar-sys/src/components/Sphere.js":"4","/Users/mivd/Documents/Code/playground/3d-solar-sys/src/components/Planets.js":"5","/Users/mivd/Documents/Code/playground/3d-solar-sys/src/index.js":"6","/Users/mivd/Documents/Code/playground/3d-solar-sys/src/components/controls/CameraControls.js":"7"},{"size":362,"mtime":1608313589147,"results":"8","hashOfConfig":"9"},{"size":1065,"mtime":1608378553493,"results":"10","hashOfConfig":"9"},{"size":1177,"mtime":1608373533382,"results":"11","hashOfConfig":"9"},{"size":941,"mtime":1608375887337,"results":"12","hashOfConfig":"9"},{"size":639,"mtime":1608375687193,"results":"13","hashOfConfig":"9"},{"size":500,"mtime":1608313589146,"results":"14","hashOfConfig":"9"},{"size":625,"mtime":1608375902600,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"25vmpr",{"filePath":"19","messages":"20","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mivd/Documents/Code/playground/3d-solar-sys/src/reportWebVitals.js",[],["34","35"],"/Users/mivd/Documents/Code/playground/3d-solar-sys/src/App.js",["36"],"/Users/mivd/Documents/Code/playground/3d-solar-sys/src/components/Stars.js",["37"],"import React, { useRef, useMemo } from 'react'\nimport * as THREE from 'three';\n// import { useFrame } from 'react-three-fiber'\nimport Planets from './Planets';\n\nconst Stars = ({planets}) => {\n  let group = useRef()\n  // let theta = 0;\n  // useFrame(() => {\n  //   const r = 2.5 * Math.sin(THREE.Math.degToRad((theta += .1)))\n  //   const s = Math.cos(THREE.Math.degToRad(theta * 4))\n  //   group.current.rotation.set(r, r, r)\n  //   group.current.scale.set(s, s, s)\n  // })\n  const [geo, mat, vertices, coords] = useMemo(() => {\n    const vertices = [[-1, 0, 0], [0, 1, 0], [1, 0, 0], [0, -1, 0], [-1, 0, 0]];\n    const geo = new THREE.SphereBufferGeometry(1, 10, 10)\n    const mat = new THREE.MeshBasicMaterial({ color: new THREE.Color('lightblue') })\n    const coords = new Array(2000).fill().map(i => [Math.random() * 800 - 400, Math.random() * 800 - 400, Math.random() * 800 - 400])\n    return [geo, mat, vertices, coords]\n  }, [])\n  \n  return (\n    <group ref={group}>\n      {coords.map(([p1, p2, p3], i) => (\n        <mesh key={i} geometry={geo} material={mat} position={[p1, p2, p3]} />\n      ))}\n      <Planets data={planets}/>\n    </group>\n  )\n}\n\nexport default Stars;",["38","39"],"/Users/mivd/Documents/Code/playground/3d-solar-sys/src/components/Sphere.js",[],"/Users/mivd/Documents/Code/playground/3d-solar-sys/src/components/Planets.js",[],"/Users/mivd/Documents/Code/playground/3d-solar-sys/src/index.js",[],["40","41"],"/Users/mivd/Documents/Code/playground/3d-solar-sys/src/components/controls/CameraControls.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":null,"fatal":true,"severity":2,"message":"46","line":14,"column":23},{"ruleId":"47","severity":1,"message":"48","line":15,"column":20,"nodeType":"49","messageId":"50","endLine":15,"endColumn":28},{"ruleId":"42","replacedBy":"51"},{"ruleId":"44","replacedBy":"52"},{"ruleId":"42","replacedBy":"53"},{"ruleId":"44","replacedBy":"54"},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"Parsing error: Unterminated string constant\n\n  12 |   useEffect(() => {\n  13 |     async function fetchPlanets() {\n> 14 |       await Axios.get('https://api.le-systeme-solaire.net/rest.php/bodies?order=semimajorAxis%2Cdesc)\n     |                       ^\n  15 |                  .then(response => {\n  16 |                    setBodies(response.data.bodies)\n  17 |                  })","no-unused-vars","'vertices' is assigned a value but never used.","Identifier","unusedVar",["55"],["56"],["55"],["56"],"no-global-assign","no-unsafe-negation"]